{"version":3,"sources":["components/Contacts/ContactForm/ContactForm.module.css","components/Contacts/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/Contacts/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Section/Section.module.css","utils/handleInput.js","components/Contacts/ContactForm/handleSubmit.js","components/Contacts/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Contacts/ContactItem/ContactItem.jsx","components/Contacts/ContactList/ContactList.jsx","components/Container/Container.jsx","components/Section/Section.jsx","utils/addContact.js","utils/onDeleteContactItem.js","utils/onVisibleContacts.js","App.jsx","index.js"],"names":["module","exports","handleInput","evt","target","name","value","this","setState","handleSubmit","preventDefault","props","onAddedContact","state","number","ContactForm","bind","onSubmit","className","s","form","overlay","type","input","onChange","button","disabled","Component","Filter","searchFilter","handler","filter","ContactItem","onDeleteContact","listItem","fullName","onClick","ContactList","visible","deleteContactItem","container","map","el","id","Container","children","Section","title","addContact","contactItem","uuid","slice","prevState","contacts","find","alert","onDeleteContactItem","contactId","onVisibleContacts","toLowerCase","includes","App","dataContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfd1f343.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__9fCwJ\",\"input\":\"ContactForm_input__OrYSQ\",\"overlay\":\"ContactForm_overlay__3gzAg\",\"button\":\"ContactForm_button__3cfIg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactItem_listItem__kVco9\",\"button\":\"ContactItem_button__13Wa3\",\"fullName\":\"ContactItem_fullName__1p9-7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2Tr3p\",\"input\":\"Filter_input__2kgOB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__cW6QX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3Utcn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2e0ea\"};","export default function handleInput(evt) {\r\n  const { name, value } = evt.target;\r\n  this.setState({ [name]: value });\r\n}\r\n","export default function handleSubmit(evt) {\r\n  evt.preventDefault();\r\n  this.props.onAddedContact(this.state.name, this.state.number);\r\n  this.setState({\r\n    name: '',\r\n    number: '',\r\n  });\r\n}\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\nimport handleInput from 'utils/handleInput';\r\nimport handleSubmit from './handleSubmit.js';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleInput = handleInput.bind(this);\r\n  handleSubmit = handleSubmit.bind(this);\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={s.form}>\r\n        <div className={s.overlay}>\r\n          <label>\r\n            Name{' '}\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              className={s.input}\r\n              value={this.state.name}\r\n              onChange={this.handleInput}\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            Number{' '}\r\n            <input\r\n              type=\"number\"\r\n              name=\"number\"\r\n              className={s.input}\r\n              value={this.state.number}\r\n              onChange={this.handleInput}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <button type=\"submit\" className={s.button} disabled={!this.state.name}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onAddedContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter({ searchFilter, handler }) {\r\n  return (\r\n    <div className={s.filter}>\r\n      <label>\r\n        Filter{' '}\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          className={s.input}\r\n          value={searchFilter}\r\n          onChange={handler}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  searchFilter: PropTypes.string.isRequired,\r\n  handler: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactItem.module.css';\r\nexport default function ContactItem({ name, number, onDeleteContact }) {\r\n  return (\r\n    <li className={s.listItem}>\r\n      <div className={s.fullName}>\r\n        <span>{name}: </span>\r\n        <span>{number}</span>\r\n      </div>\r\n      <button type=\"button\" className={s.button} onClick={onDeleteContact}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nimport ContactItem from 'components/Contacts/ContactItem';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactList({ visible, deleteContactItem }) {\r\n  return (\r\n    <ul className={s.container}>\r\n      {visible().map(el => (\r\n        <ContactItem\r\n          name={el.name}\r\n          number={el.number}\r\n          onDeleteContact={() => deleteContactItem(el.id)}\r\n          key={el.id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  visible: PropTypes.func.isRequired,\r\n  deleteContactItem: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n","import { v4 as uuid } from 'uuid';\r\n\r\nexport default function addContact(name, number) {\r\n  const contactItem = {\r\n    id: uuid().slice(30),\r\n    name,\r\n    number,\r\n  };\r\n  this.setState(prevState => {\r\n    const contactFound = prevState.contacts.find(el => el.name === name);\r\n    if (contactFound) {\r\n      alert(`${name} is already in contacts`);\r\n      return {\r\n        filter: name,\r\n      };\r\n    }\r\n    return {\r\n      contacts: [...prevState.contacts, contactItem],\r\n    };\r\n  });\r\n}\r\n","export default function onDeleteContactItem(contactId) {\r\n  this.setState(prevState => {\r\n    return {\r\n      contacts: prevState.contacts.filter(({ id }) => id !== contactId),\r\n    };\r\n  });\r\n}\r\n","export default function onVisibleContacts() {\r\n  return this.state.contacts.filter(el =>\r\n    el.name.toLowerCase().includes(this.state.filter.toLowerCase()),\r\n  );\r\n}\r\n","import { Component } from 'react';\r\n\r\nimport ContactForm from 'components/Contacts/ContactForm';\r\nimport Filter from 'components/Filter';\r\nimport ContactList from 'components/Contacts/ContactList';\r\nimport Container from 'components/Container';\r\nimport Section from 'components/Section';\r\n\r\nimport handleInput from 'utils/handleInput';\r\nimport addContact from 'utils/addContact';\r\nimport onDeleteContactItem from 'utils/onDeleteContactItem';\r\nimport onVisibleContacts from 'utils/onVisibleContacts';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  handleInput = handleInput.bind(this);\r\n  addContact = addContact.bind(this);\r\n  onDeleteContactItem = onDeleteContactItem.bind(this);\r\n  onVisibleContacts = onVisibleContacts.bind(this);\r\n\r\n  componentDidMount() {\r\n    const dataContacts = localStorage.getItem('contacts');\r\n    if (dataContacts) this.setState({ contacts: JSON.parse(dataContacts) });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Section title=\"Phonebook\">\r\n          <ContactForm onAddedContact={this.addContact} />\r\n        </Section>\r\n\r\n        <Section title=\"Contacts\">\r\n          <div>\r\n            <Filter\r\n              searchFilter={this.state.filter}\r\n              handler={this.handleInput}\r\n            />\r\n\r\n            <ContactList\r\n              visible={this.onVisibleContacts}\r\n              deleteContactItem={this.onDeleteContactItem}\r\n            />\r\n          </div>\r\n        </Section>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}